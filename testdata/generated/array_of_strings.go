// Code generated by bebopc-go; DO NOT EDIT.

package generated

import (
	"io"

	"github.com/200sc/bebop"
	"github.com/200sc/bebop/iohelp"
)

var _ bebop.Record = &ArrayOfStrings{}

type ArrayOfStrings struct {
	Strings []string
}

func (bbp ArrayOfStrings) EncodeBebop(iow io.Writer) (err error) {
	w := iohelp.NewErrorWriter(iow)
	iohelp.WriteUint32(w, uint32(len(bbp.Strings)))
	for _, elem := range bbp.Strings {
		iohelp.WriteUint32(w, uint32(len(elem)))
		w.Write([]byte(elem))
	}
	return w.Err
}

func (bbp *ArrayOfStrings) DecodeBebop(ior io.Reader) (err error) {
	r := iohelp.NewErrorReader(ior)
	{
		bbp.Strings = make([]string, iohelp.ReadUint32(r))
		for i2 := range bbp.Strings {
			(bbp.Strings[i2]) = iohelp.ReadString(r)
		}
	}
	return r.Err
}

func (bbp *ArrayOfStrings) bodyLen() uint32 {
	bodyLen := uint32(0)
	bodyLen += 4
	for _, elem := range bbp.Strings {
		bodyLen += 4
		bodyLen += uint32(len(elem))
	}
	return bodyLen
}

