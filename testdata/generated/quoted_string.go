// Code generated by bebopc-go; DO NOT EDIT.

package generated

import (
	"encoding/binary"
	"io"

	"github.com/200sc/bebop"
	"github.com/200sc/bebop/iohelp"
)

var _ bebop.Record = &QuotedString{}

type QuotedString struct {
	// Deprecated: "deprecated"
	X int32
	// Deprecated: escaped slash: \
	Y int32
	// Deprecated: escaped" "slashes:\\"" \
	Z int32
}

func (bbp QuotedString) EncodeBebop(iow io.Writer) (err error) {
	w := iohelp.NewErrorWriter(iow)
	iohelp.WriteInt32(w, bbp.X)
	iohelp.WriteInt32(w, bbp.Y)
	iohelp.WriteInt32(w, bbp.Z)
	return w.Err
}

func (bbp *QuotedString) DecodeBebop(ior io.Reader) (err error) {
	r := iohelp.NewErrorReader(ior)
	binary.Read(r, binary.LittleEndian, &bbp.X)
	binary.Read(r, binary.LittleEndian, &bbp.Y)
	binary.Read(r, binary.LittleEndian, &bbp.Z)
	return r.Err
}

func (bbp *QuotedString) bodyLen() uint32 {
	bodyLen := uint32(0)
	bodyLen += 4
	bodyLen += 4
	bodyLen += 4
	return bodyLen
}

